clear;

pkg load communications;
pkg load ltfat;
pkg load parallel;
pkg load signal;

addpath("~/Projekty/Octave-FWT-Utils");
warning('off', 'Octave:data-file-in-path');

#U = [ 2.13 39.31 24.38 18.39 37.42 3.5 ];
#C = 'ntnsss';

#U = [ 1.81 1e-3 24.38 0.073 5.62 28.6 ];
#C = 'ntnsss';

#U = [ 2.13 13.26 11.80 16.70 23.04 16.29 12.32 25.08 2.35 6.07 12.35 1.16 ]; #us = 73.21;
#U = [ 1.81 13.26 11.80 16.70 1e-5 1e-5 0.06 3.77 19.16 0.04 1.85 9.44 ]; #us = 43.93;
#C = 'nnnnttssssss';
#R = [ ...
#1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0 ];
#tst = gen_randm(1e5, C, U);
#tst(5,:) = tst(6,:) * (U(5)/U(6));
#tst(7,:) = tst(10,:) * (U(7)/U(10));
#tst(8,:) = tst(11,:) * (U(8)/U(11));
#tst(9,:) = tst(12,:) * (U(9)/U(12));
#
#for i = 1 : length(U)
#  Uc(i) = get_uncertainty(tst(i,:));
#end

#U = [ 3.49 3.01 5.06 1.87 4.68 4.67 ];
#C = 'tunsss';
#R = 0;

rr = 1;

R = [1 rr 0; rr 1 0; 0 0 1];
C = "uut";

#errs = sum(gen_randm(1e6, C, U));
x1 = gen_randu(1e6, 5, 'u');
x2 = 0.1*rr*x1;#gen_randu(1e6, 1, 'u');
x3 = gen_randt(1e6, 3, 'u');
errs = x1 + x2 + x3;

U = [ get_uncertainty(x1) get_uncertainty(x2) get_uncertainty(x3) ];

us = get_uncertainty(errs)

[H, S, k1, k2] = get_cohermatrix(C, U, R);
uc = sqrt(U*H*transpose(U))
pd = 100*(uc - us)/us


