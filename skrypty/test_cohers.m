clear;

pkg load communications;
pkg load ltfat;
pkg load parallel;
pkg load signal;

addpath("~/Projekty/Octave-FWT-Utils");

h_uu = 0.3358;
h_un = 0.1338;
h_us = 0.5233;
h_ut = 0.1774;

h_nu = 0.1338;
h_nn = 0.0000;
h_ns = 0.2876;
h_nt = 0.0218;

h_su = 0.5233;
h_sn = 0.2876;
h_ss = 0.7144;
h_st = 0.3502;

h_tu = 0.1774;
h_tn = 0.0218;
h_ts = 0.3502;
h_tt = 0.0408;

#U = [ 2.13 39.31 24.38 18.39 37.42 3.5 ];
#C = 'ntnsss';

#U = [ 1.81 1e-3 24.38 0.073 5.62 28.6 ];
#C = 'ntnsss';

#U = [ 2.13 13.26 11.80 16.70 23.04 16.29 12.32 25.08 2.35 6.07 12.35 1.16 ]; us = 73.21;
#U = [ 1.81 13.26 11.80 16.70 1e-5 1e-5 0.06 3.77 19.16 0.04 1.85 9.44 ]; us = 43.93;
#C = 'nnnnttssssss';
#R = [ ...
#1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0   0.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0   0.0 ; ...
#0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0   0.0   1.0 ];
#tst = gen_randm(1e5, C, U);
#tst(5,:) = tst(6,:) * (U(5)/U(6));
#tst(7,:) = tst(10,:) * (U(7)/U(10));
#tst(8,:) = tst(11,:) * (U(8)/U(11));
#tst(9,:) = tst(12,:) * (U(9)/U(12));
#
#for i = 1 : length(U)
#  Uc(i) = get_uncertainty(tst(i,:));
#end

#x1 = gen_randt(1e5, 10, 'u');
#x2 = sqrt(0.5)*x1;# + sqrt(0.5)*gen_randu(1e5, 1, 'u');
#x3 = gen_randn(1e5, 7, 'u');
#x4 = gen_randu(1e5, 5, 'u');
#x5 = gen_rands(1e5, 3, 'u');
#
#xs = x1 + x2 + x3 + x4 + x5;
#
#r = get_corelation(x1, x2);
#R = [1 r 0 0 0; r 1 0 0 0; 0 0 1 0 0; 0 0 0 1 0; 0 0 0 0 1];
#U = [get_uncertainty(x1) get_uncertainty(x2) get_uncertainty(x3) get_uncertainty(x4) get_uncertainty(x5)];
#C = 'ttnus';
#
#U = [ 2.13 39.31 24.38 18.39 37.42 3.5 ]; us = 73.21;
#U = [ 1.81 1e-3 24.38 0.073 5.62 28.6 ]; us = 43.93;
#C = 'ntnsss';
#R = 0;

#U = [ 1 2 3 4 1 1 ];
#C = 'uuuuuu';
#R = 0;

[H, S, k1, k2] = get_cohermatrix(C, U, R);
tst = gen_randm(1e5, C, U);

us = get_uncertainty(sum(tst))
#us = get_uncertainty(xs)
uc = sqrt(U*H*transpose(U))
pd = 100*(uc - us)/us

